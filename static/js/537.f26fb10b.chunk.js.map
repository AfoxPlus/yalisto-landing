{"version":3,"file":"static/js/537.f26fb10b.chunk.js","mappings":"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","sources":["common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","components/PublishForm/styles.ts","components/PublishForm/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { notification } from \"antd\";\n\ninterface IValues {\n  name: string;\n  email: string;\n  phone: string;\n  establishmentName: string;\n  establishmentType: string;\n}\n\nconst initialValues: IValues = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  establishmentName: \"\",\n  establishmentType: \"\"\n};\n\nexport const useForm = (validate: { (values: IValues): IValues }) => {\n  const [formState, setFormState] = useState<{\n    values: IValues;\n    errors: IValues;\n  }>({\n    values: { ...initialValues },\n    errors: { ...initialValues },\n  });\n\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const values = formState.values;\n    console.log(\"HANDLE SUBMIT\")\n    console.log(values)\n    const errors = validate(values);\n    setFormState((prevState) => ({ ...prevState, errors }));\n\n    const url = \"https://4qg2nayfoi.execute-api.us-east-1.amazonaws.com/prod/restaurant/partner\";\n\n    try {\n      if (Object.values(errors).every((error) => error === \"\")) {\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(values),\n        });\n        \n        if (!response.ok) {\n          notification[\"error\"]({\n            message: \"Error\",\n            description:\n              \"Hubo un error al enviar su mensaje, por favor intente nuevamente más tarde.\",\n          });\n        } else {\n          event.target.reset();\n          setFormState(() => ({\n            values: { ...initialValues },\n            errors: { ...initialValues },\n          }));\n          const data = await response.json();\n          if(data.success) {\n            notification[\"success\"]({\n              duration: 10,\n              message: \"Success\",\n              description: data.message,\n            });\n          }else {\n            notification[\"error\"]({\n              message: \"Error\",\n              description: data.message,\n            });\n          }\n          \n        }\n      }\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: \"No se pudo enviar el formulario. Inténtelo nuevamente más tarde.\",\n      });\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    event.persist();\n    const { name, value } = event.target;\n    setFormState((prevState) => ({\n      ...prevState,\n      values: {\n        ...prevState.values,\n        [name]: value,\n      },\n      errors: {\n        ...prevState.errors,\n        [name]: \"\",\n      },\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values: formState.values,\n    errors: formState.errors,\n  };\n};\n","import { validateProps } from \"../../common/types\";\n\nexport default function validate(values: validateProps) {\n  let errors = {} as validateProps;\n  console.log(values)\n  if (!values.name) {\n    errors.name = \"El nombre es requerido\";\n  }\n  if (!values.email) {\n    errors.email = \"El email es requerido\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  }\n  if (!values.phone) {\n    errors.phone = \"El celular es requerido\";\n  } else if (!/^\\d{9}$/.test(values.phone)) {\n    errors.phone = \"El número de celular debe tener 9 dígitos\";\n  }\n  if (!values.establishmentName) {\n    errors.establishmentName = \"El nombre del establecimiento es requerido\";\n  }\n  if (!values.establishmentType) {\n    errors.establishmentType = \"El tipo de establecimiento es requerido\";\n  }\n  return errors;\n}\n","import styled from \"styled-components\";\n\nexport const Content = styled(\"p\")`\n  margin-top: 1.5rem;\n`;\n\nexport const Container = styled(\"div\")`\n  position: relative;\n  max-width: 700px;\n`;\n\nexport const TextWrapper = styled(\"div\")`\n  border-radius: 3rem;\n  max-width: 400px;\n`;\n","import { withTranslation, TFunction } from \"react-i18next\";\nimport { Container, TextWrapper, Content } from \"./styles\";\n\ninterface Props {\n  title: string;\n  content: string;\n  t: TFunction;\n}\n\nconst Block = ({ title, content, t }: Props) => {\n  return (\n    <Container>\n      <h6>{t(title)}</h6>\n      <TextWrapper>\n        <Content>{t(content)}</Content>\n      </TextWrapper>\n    </Container>\n  );\n};\n\nexport default withTranslation()(Block);\n","import styled from \"styled-components\";\n\nexport const Container = styled(\"div\")`\n  display: inline-block;\n  width: 100%;\n  padding: 10px 5px;\n`;\n\nexport const StyledInput = styled(\"input\")`\n  font-size: 0.875rem;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled(\"div\")`\n  display: inline-block;\n  width: 100%;\n  padding: 10px 5px;\n  margin-bottom: -0.625rem;\n`;\n\nexport const StyledTextArea = styled(\"textarea\")`\n  resize: none;\n  font-size: 0.875rem;\n  height: 185px;\n`;\n\nexport const Label = styled(\"label\")`\n  display: block;\n  padding-bottom: 10px;\n  text-transform: capitalize;\n`;\n","import { withTranslation } from \"react-i18next\";\nimport { Container, StyledInput } from \"./styles\";\nimport { Label } from \"../TextArea/styles\";\nimport { InputProps } from \"../types\";\n\nconst Input = ({label, name, placeholder, onChange, t }: InputProps) => (\n  <Container>\n    <Label htmlFor={label}>{t(label)}</Label>\n    <StyledInput\n      placeholder={t(placeholder)}\n      name={name}\n      id={name}\n      onChange={onChange}\n    />\n  </Container>\n);\n\nexport default withTranslation()(Input);\n","import styled from \"styled-components\";\n\nexport const PublishContainer = styled(\"div\")`\n  padding: 5rem 0;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 3rem 0;\n  }\n`;\n\nexport const FormGroup = styled(\"form\")`\n  width: 100%;\n  max-width: 520px;\n\n  @media only screen and (max-width: 1045px) {\n    max-width: 100%;\n    margin-top: 2rem;\n  }\n`;\n\nexport const Span = styled(\"span\")`\n  display: block;\n  font-weight: 600;\n  color: rgb(255, 130, 92);\n  height: 0.775rem;\n  padding: 0 0.675rem;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  text-align: end;\n  position: relative;\n\n  @media only screen and (max-width: 414px) {\n    padding-top: 0.75rem;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Slide } from \"react-awesome-reveal\";\nimport { PublishProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport { PublishContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\n\nconst Publish = ({ title, content, id, t }: PublishProps) => {\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\n\n  const ValidationType = ({ type }: ValidationTypeProps) => {\n    const ErrorMessage = errors[type as keyof typeof errors];\n    return <Span>{ErrorMessage}</Span>;\n  };\n\n  return (\n    <PublishContainer id={id}>\n      <Row justify=\"space-between\" align=\"middle\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <Slide direction=\"left\" triggerOnce>\n            <Block title={title} content={content} />\n          </Slide>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"right\" triggerOnce>\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Col span={24}>\n                <Input\n                  label = \"Nombre\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Ej. Pedro\"\n                  value={values.name || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"name\" />\n              </Col>\n              <Col span={24}>\n                <Input\n                 label = \"Email\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Ej. pedro_123@gmail.com\"\n                  value={values.email || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"email\" />\n              </Col>\n              <Col span={24}>\n                <Input\n                    label = \"Celular\"\n                  type=\"tel\"\n                  name=\"phone\"\n                  placeholder=\"Ej. 966212321\"\n                  value={values.phone || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"phone\" />\n              </Col>\n              <Col span={24}>\n                <Input\n                 label = \"Establecimiento\"\n                  type=\"text\"\n                  name=\"establishmentName\"\n                  placeholder=\"Ej. Kitchen\"\n                  value={values.establishmentName || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"establishmentName\" />\n              </Col>\n              <Col span={24}>\n                <Input\n                 label = \"Tipo de Establecimiento\"\n                  type=\"text\"\n                  name=\"establishmentType\"\n                  placeholder=\"Ej. Restaurante\"\n                  value={values.establishmentType || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"establishmentType\" />\n              </Col>\n              <ButtonContainer>\n                <Button name=\"submit\">{t(\"Register\")}</Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </PublishContainer>\n  );\n};\n\nexport default withTranslation()(Publish);\n"],"names":["initialValues","name","email","phone","establishmentName","establishmentType","validate","values","errors","console","log","test","Content","styled","Container","TextWrapper","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","StyledInput","Label","label","placeholder","onChange","htmlFor","id","PublishContainer","FormGroup","Span","ButtonContainer","handleChange","handleSubmit","formState","setFormState","useState","event","persist","value","target","prevState","async","preventDefault","Object","every","error","response","fetch","method","headers","body","JSON","stringify","ok","reset","data","json","success","notification","duration","message","description","useForm","ValidationType","_ref2","type","ErrorMessage","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","Button"],"sourceRoot":""}